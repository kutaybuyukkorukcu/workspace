package com.kutay.github.webservice.predictInOne;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Random;

import com.kutay.github.webservice.numarapredict.Server;

class Client {
	private Socket socket = null;
	private DataInputStream input = null;
	private DataOutputStream output = null;
	private static int MIN = 1;
	private static int MAX = 100;
	public static String IP = "127.0.0.1";
	
	public Client(String address, int port) {
		try {
			socket = new Socket(address, port);
			System.out.println("Connected");

			input = new DataInputStream(System.in);
			output = new DataOutputStream(socket.getOutputStream());
			
			/*String line = "";
			do {
				try {
					System.out.print(MIN + " ile " + MAX + " arasýnda bir sayý giriniz : ");
					line = input.readLine();
					if (Server.numberGuessed == Integer.parseInt(line)) {
						socket.close();
						input.close();
						output.close();
					}
					output.writeUTF(line);
					output.flush();
				} catch (IOException i) {
					System.out.println(i);
				}
			} while (Server.numberGuessed != Integer.parseInt(line)); */
			
			String line = ""; // 0 verince EOFException?!
			String temp = "";
			// while (Server.numberGuessed != Integer.parseInt(line)) line = -1 
			// !input.equals(String.valueOf(Server.numberGuessed))
			do {
				try {
					System.out.print(MIN + " ile " + MAX + " arasýnda bir sayý giriniz : ");
					line = input.readLine();
					if (line.equals(temp)) {
						System.out.println("Bu sayi icin tahminde bulunmustunuz!");
						continue;
					}
					temp = line;
					output.writeUTF(line);
					output.flush();
				} catch (IOException i) {
					System.out.println(i);
				} catch (NumberFormatException e) {
					System.out.println(e);
				}
			} while (socket.isConnected());
			
			System.out.println("closed");

			socket.close();
			input.close();
			output.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}

	public static void main(String args[]) {
		Client client = new Client(IP, PORT);
	}
}

class Server {
	private Socket socket = null;
	private ServerSocket server = null;
	private DataInputStream input = null;
	private static int MIN = 1;
	private static int MAX = 100;
	public static int numberGuessed;
	public static int PORT = 2345;
	public static int port;
	public static int guessesTaken = 0; 
	
	public Server(int port) {
		try {
			server = new ServerSocket(port);
			System.out.println("Server started");
			
			socket = server.accept();
			System.out.println("Client accepted");
			
			// new BufferedInputStream gerekli mi bakarsin?
			input = new DataInputStream(socket.getInputStream());
			
			Random random = new Random();
			numberGuessed = random.nextInt(MAX - 1) + 1;
			
			int guess = 0;
			String line = "";
			do {
				try {
					line = input.readUTF();
					guess = Integer.parseInt(line);
					guessesTaken += 1; 
					if (numberGuessed == guess) {
						System.out.println("Tebrikler! " + numberGuessed + " tahmin ettiðim numarayý " + guessesTaken + ". denemende buldun!");
						break;
					} else {
						if (numberGuessed > guess) {
							System.out.println("Numaram " + guess + "'den daha yukarýda.");
						} else {
							System.out.println("Numaram " + guess + "'den daha aþaðýda.");
						}
					}
				} catch (IOException i) {
					System.out.println(i);
				} catch (NumberFormatException e) {
					System.out.println(e);
				} catch (NullPointerException j) {
					System.out.println(j);
				}
			} while (guess != -1);
			System.out.println("Closing connection");
			socket.close();
			input.close();
		} catch (IOException i) {
			System.out.println(i);
		} catch (NumberFormatException e) {
			System.out.println(e);
		} catch (NullPointerException j) {
			System.out.println(j);
		}
	}
	
	/*public static int RandomNumberGenerator() {
		Random random = new Random();
		int number = random.nextInt(MAX - 1) + 1;
		return number;
	}*/
		
	/*public static void setPort() {
		Scanner in = new Scanner(System.in);
		System.out.print("Server icin port giriniz : ");
		port = in.nextInt();
		in.close();
	}
	public static int getPort() {
		return port;
	} */
}
